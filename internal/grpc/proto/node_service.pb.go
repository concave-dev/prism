// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: internal/grpc/proto/node_service.proto

// Package prism.node.v1 defines the gRPC service for inter-node communication
// in the Prism cluster, enabling resource discovery and health monitoring.

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HealthStatus represents the overall health state of a node for workload placement decisions.
type HealthStatus int32

const (
	HealthStatus_UNKNOWN   HealthStatus = 0 // Unknown health state or health checks failed
	HealthStatus_HEALTHY   HealthStatus = 1 // Fully operational and ready for new workloads
	HealthStatus_DEGRADED  HealthStatus = 2 // Operational with minor issues, monitor closely
	HealthStatus_UNHEALTHY HealthStatus = 3 // Serious issues, should not receive new workloads
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEALTHY",
		2: "DEGRADED",
		3: "UNHEALTHY",
	}
	HealthStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"HEALTHY":   1,
		"DEGRADED":  2,
		"UNHEALTHY": 3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_grpc_proto_node_service_proto_enumTypes[0].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_internal_grpc_proto_node_service_proto_enumTypes[0]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_internal_grpc_proto_node_service_proto_rawDescGZIP(), []int{0}
}

// GetResourcesRequest allows selective querying of specific resource types.
type GetResourcesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional: specific resource types to query (e.g., "cpu", "memory", "jobs").
	// If empty, returns all available resource information.
	ResourceTypes []string `protobuf:"bytes,1,rep,name=resource_types,json=resourceTypes,proto3" json:"resource_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourcesRequest) Reset() {
	*x = GetResourcesRequest{}
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesRequest) ProtoMessage() {}

func (x *GetResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesRequest.ProtoReflect.Descriptor instead.
func (*GetResourcesRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_node_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetResourcesRequest) GetResourceTypes() []string {
	if x != nil {
		return x.ResourceTypes
	}
	return nil
}

// GetResourcesResponse contains node resource information for workload placement decisions.
type GetResourcesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this node (12-character hex string)
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Human-readable name for this node
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Timestamp when these resource metrics were captured
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// CPU Information
	CpuCores     int32   `protobuf:"varint,4,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`              // Total CPU cores available
	CpuUsage     float64 `protobuf:"fixed64,5,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`             // Current CPU utilization percentage (0.0-100.0)
	CpuAvailable float64 `protobuf:"fixed64,6,opt,name=cpu_available,json=cpuAvailable,proto3" json:"cpu_available,omitempty"` // Available CPU capacity percentage
	// Memory Information (bytes)
	MemoryTotal     uint64  `protobuf:"varint,7,opt,name=memory_total,json=memoryTotal,proto3" json:"memory_total,omitempty"`             // Total physical memory
	MemoryUsed      uint64  `protobuf:"varint,8,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`                // Currently used memory
	MemoryAvailable uint64  `protobuf:"varint,9,opt,name=memory_available,json=memoryAvailable,proto3" json:"memory_available,omitempty"` // Available memory for new allocations
	MemoryUsage     float64 `protobuf:"fixed64,10,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`           // Memory utilization percentage (0.0-100.0)
	// Disk Information (bytes) - root filesystem for workload storage
	DiskTotal     uint64  `protobuf:"varint,11,opt,name=disk_total,json=diskTotal,proto3" json:"disk_total,omitempty"`             // Total disk space available
	DiskUsed      uint64  `protobuf:"varint,12,opt,name=disk_used,json=diskUsed,proto3" json:"disk_used,omitempty"`                // Currently used disk space
	DiskAvailable uint64  `protobuf:"varint,13,opt,name=disk_available,json=diskAvailable,proto3" json:"disk_available,omitempty"` // Available disk space for new workloads
	DiskUsage     float64 `protobuf:"fixed64,14,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`            // Disk utilization percentage (0.0-100.0)
	// Go Runtime Information
	GoRoutines int32   `protobuf:"varint,15,opt,name=go_routines,json=goRoutines,proto3" json:"go_routines,omitempty"`   // Active goroutines in prismd process
	GoMemAlloc uint64  `protobuf:"varint,16,opt,name=go_mem_alloc,json=goMemAlloc,proto3" json:"go_mem_alloc,omitempty"` // Heap memory allocated by Go runtime (bytes)
	GoMemSys   uint64  `protobuf:"varint,17,opt,name=go_mem_sys,json=goMemSys,proto3" json:"go_mem_sys,omitempty"`       // Memory obtained from OS by Go runtime (bytes)
	GoGcCycles uint32  `protobuf:"varint,18,opt,name=go_gc_cycles,json=goGcCycles,proto3" json:"go_gc_cycles,omitempty"` // Completed garbage collection cycles
	GoGcPause  float64 `protobuf:"fixed64,19,opt,name=go_gc_pause,json=goGcPause,proto3" json:"go_gc_pause,omitempty"`   // Average GC pause time (milliseconds)
	// Node Status and Load
	UptimeSeconds int64   `protobuf:"varint,20,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"` // Node uptime since prismd started
	Load1         float64 `protobuf:"fixed64,21,opt,name=load1,proto3" json:"load1,omitempty"`                                     // System load average (1 minute)
	Load5         float64 `protobuf:"fixed64,22,opt,name=load5,proto3" json:"load5,omitempty"`                                     // System load average (5 minutes)
	Load15        float64 `protobuf:"fixed64,23,opt,name=load15,proto3" json:"load15,omitempty"`                                   // System load average (15 minutes)
	// Job Capacity and Utilization
	MaxJobs        int32 `protobuf:"varint,24,opt,name=max_jobs,json=maxJobs,proto3" json:"max_jobs,omitempty"`                      // Maximum concurrent AI agent jobs
	CurrentJobs    int32 `protobuf:"varint,25,opt,name=current_jobs,json=currentJobs,proto3" json:"current_jobs,omitempty"`          // Currently running AI agent jobs
	AvailableSlots int32 `protobuf:"varint,26,opt,name=available_slots,json=availableSlots,proto3" json:"available_slots,omitempty"` // Available job slots (max_jobs - current_jobs)
	// Resource Score for Intelligent Scheduling
	Score         float64 `protobuf:"fixed64,27,opt,name=score,proto3" json:"score,omitempty"` // Composite resource score for workload placement (0.0-100.0)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourcesResponse) Reset() {
	*x = GetResourcesResponse{}
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesResponse) ProtoMessage() {}

func (x *GetResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesResponse.ProtoReflect.Descriptor instead.
func (*GetResourcesResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_node_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetResourcesResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetResourcesResponse) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *GetResourcesResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetResourcesResponse) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *GetResourcesResponse) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *GetResourcesResponse) GetCpuAvailable() float64 {
	if x != nil {
		return x.CpuAvailable
	}
	return 0
}

func (x *GetResourcesResponse) GetMemoryTotal() uint64 {
	if x != nil {
		return x.MemoryTotal
	}
	return 0
}

func (x *GetResourcesResponse) GetMemoryUsed() uint64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *GetResourcesResponse) GetMemoryAvailable() uint64 {
	if x != nil {
		return x.MemoryAvailable
	}
	return 0
}

func (x *GetResourcesResponse) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *GetResourcesResponse) GetDiskTotal() uint64 {
	if x != nil {
		return x.DiskTotal
	}
	return 0
}

func (x *GetResourcesResponse) GetDiskUsed() uint64 {
	if x != nil {
		return x.DiskUsed
	}
	return 0
}

func (x *GetResourcesResponse) GetDiskAvailable() uint64 {
	if x != nil {
		return x.DiskAvailable
	}
	return 0
}

func (x *GetResourcesResponse) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *GetResourcesResponse) GetGoRoutines() int32 {
	if x != nil {
		return x.GoRoutines
	}
	return 0
}

func (x *GetResourcesResponse) GetGoMemAlloc() uint64 {
	if x != nil {
		return x.GoMemAlloc
	}
	return 0
}

func (x *GetResourcesResponse) GetGoMemSys() uint64 {
	if x != nil {
		return x.GoMemSys
	}
	return 0
}

func (x *GetResourcesResponse) GetGoGcCycles() uint32 {
	if x != nil {
		return x.GoGcCycles
	}
	return 0
}

func (x *GetResourcesResponse) GetGoGcPause() float64 {
	if x != nil {
		return x.GoGcPause
	}
	return 0
}

func (x *GetResourcesResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *GetResourcesResponse) GetLoad1() float64 {
	if x != nil {
		return x.Load1
	}
	return 0
}

func (x *GetResourcesResponse) GetLoad5() float64 {
	if x != nil {
		return x.Load5
	}
	return 0
}

func (x *GetResourcesResponse) GetLoad15() float64 {
	if x != nil {
		return x.Load15
	}
	return 0
}

func (x *GetResourcesResponse) GetMaxJobs() int32 {
	if x != nil {
		return x.MaxJobs
	}
	return 0
}

func (x *GetResourcesResponse) GetCurrentJobs() int32 {
	if x != nil {
		return x.CurrentJobs
	}
	return 0
}

func (x *GetResourcesResponse) GetAvailableSlots() int32 {
	if x != nil {
		return x.AvailableSlots
	}
	return 0
}

func (x *GetResourcesResponse) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

// GetHealthRequest allows selective execution of specific health checks.
type GetHealthRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional: specific health check types to perform.
	// Available types: "serf", "raft", "grpc", "api", "cpu", "memory", "disk"
	// If empty, performs all available health checks.
	CheckTypes    []string `protobuf:"bytes,1,rep,name=check_types,json=checkTypes,proto3" json:"check_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthRequest) Reset() {
	*x = GetHealthRequest{}
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthRequest) ProtoMessage() {}

func (x *GetHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthRequest.ProtoReflect.Descriptor instead.
func (*GetHealthRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_node_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetHealthRequest) GetCheckTypes() []string {
	if x != nil {
		return x.CheckTypes
	}
	return nil
}

// GetHealthResponse contains node health information for failure detection and routing decisions.
type GetHealthResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this node (12-character hex string)
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Human-readable name for this node
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Timestamp when this health assessment was performed
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Overall health status (most severe status from all checks)
	Status HealthStatus `protobuf:"varint,4,opt,name=status,proto3,enum=prism.node.v1.HealthStatus" json:"status,omitempty"`
	// Detailed results from individual health checks
	Checks        []*HealthCheck `protobuf:"bytes,5,rep,name=checks,proto3" json:"checks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthResponse) Reset() {
	*x = GetHealthResponse{}
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthResponse) ProtoMessage() {}

func (x *GetHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthResponse.ProtoReflect.Descriptor instead.
func (*GetHealthResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_node_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetHealthResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetHealthResponse) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *GetHealthResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetHealthResponse) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_UNKNOWN
}

func (x *GetHealthResponse) GetChecks() []*HealthCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

// HealthCheck represents the result of an individual health check operation.
type HealthCheck struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the health check (e.g., "disk_space", "api_connectivity", "memory_pressure")
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Status result of this specific health check
	Status HealthStatus `protobuf:"varint,2,opt,name=status,proto3,enum=prism.node.v1.HealthStatus" json:"status,omitempty"`
	// Human-readable message with metrics, errors, or diagnostic information
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Timestamp when this health check was executed
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_node_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_node_service_proto_rawDescGZIP(), []int{4}
}

func (x *HealthCheck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HealthCheck) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_UNKNOWN
}

func (x *HealthCheck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheck) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_internal_grpc_proto_node_service_proto protoreflect.FileDescriptor

const file_internal_grpc_proto_node_service_proto_rawDesc = "" +
	"\n" +
	"&internal/grpc/proto/node_service.proto\x12\rprism.node.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"<\n" +
	"\x13GetResourcesRequest\x12%\n" +
	"\x0eresource_types\x18\x01 \x03(\tR\rresourceTypes\"\x84\a\n" +
	"\x14GetResourcesResponse\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tcpu_cores\x18\x04 \x01(\x05R\bcpuCores\x12\x1b\n" +
	"\tcpu_usage\x18\x05 \x01(\x01R\bcpuUsage\x12#\n" +
	"\rcpu_available\x18\x06 \x01(\x01R\fcpuAvailable\x12!\n" +
	"\fmemory_total\x18\a \x01(\x04R\vmemoryTotal\x12\x1f\n" +
	"\vmemory_used\x18\b \x01(\x04R\n" +
	"memoryUsed\x12)\n" +
	"\x10memory_available\x18\t \x01(\x04R\x0fmemoryAvailable\x12!\n" +
	"\fmemory_usage\x18\n" +
	" \x01(\x01R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_total\x18\v \x01(\x04R\tdiskTotal\x12\x1b\n" +
	"\tdisk_used\x18\f \x01(\x04R\bdiskUsed\x12%\n" +
	"\x0edisk_available\x18\r \x01(\x04R\rdiskAvailable\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\x0e \x01(\x01R\tdiskUsage\x12\x1f\n" +
	"\vgo_routines\x18\x0f \x01(\x05R\n" +
	"goRoutines\x12 \n" +
	"\fgo_mem_alloc\x18\x10 \x01(\x04R\n" +
	"goMemAlloc\x12\x1c\n" +
	"\n" +
	"go_mem_sys\x18\x11 \x01(\x04R\bgoMemSys\x12 \n" +
	"\fgo_gc_cycles\x18\x12 \x01(\rR\n" +
	"goGcCycles\x12\x1e\n" +
	"\vgo_gc_pause\x18\x13 \x01(\x01R\tgoGcPause\x12%\n" +
	"\x0euptime_seconds\x18\x14 \x01(\x03R\ruptimeSeconds\x12\x14\n" +
	"\x05load1\x18\x15 \x01(\x01R\x05load1\x12\x14\n" +
	"\x05load5\x18\x16 \x01(\x01R\x05load5\x12\x16\n" +
	"\x06load15\x18\x17 \x01(\x01R\x06load15\x12\x19\n" +
	"\bmax_jobs\x18\x18 \x01(\x05R\amaxJobs\x12!\n" +
	"\fcurrent_jobs\x18\x19 \x01(\x05R\vcurrentJobs\x12'\n" +
	"\x0favailable_slots\x18\x1a \x01(\x05R\x0eavailableSlots\x12\x14\n" +
	"\x05score\x18\x1b \x01(\x01R\x05score\"3\n" +
	"\x10GetHealthRequest\x12\x1f\n" +
	"\vcheck_types\x18\x01 \x03(\tR\n" +
	"checkTypes\"\xec\x01\n" +
	"\x11GetHealthResponse\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x123\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1b.prism.node.v1.HealthStatusR\x06status\x122\n" +
	"\x06checks\x18\x05 \x03(\v2\x1a.prism.node.v1.HealthCheckR\x06checks\"\xaa\x01\n" +
	"\vHealthCheck\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x123\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1b.prism.node.v1.HealthStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*E\n" +
	"\fHealthStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aHEALTHY\x10\x01\x12\f\n" +
	"\bDEGRADED\x10\x02\x12\r\n" +
	"\tUNHEALTHY\x10\x032\xb6\x01\n" +
	"\vNodeService\x12W\n" +
	"\fGetResources\x12\".prism.node.v1.GetResourcesRequest\x1a#.prism.node.v1.GetResourcesResponse\x12N\n" +
	"\tGetHealth\x12\x1f.prism.node.v1.GetHealthRequest\x1a .prism.node.v1.GetHealthResponseB2Z0github.com/concave-dev/prism/internal/grpc/protob\x06proto3"

var (
	file_internal_grpc_proto_node_service_proto_rawDescOnce sync.Once
	file_internal_grpc_proto_node_service_proto_rawDescData []byte
)

func file_internal_grpc_proto_node_service_proto_rawDescGZIP() []byte {
	file_internal_grpc_proto_node_service_proto_rawDescOnce.Do(func() {
		file_internal_grpc_proto_node_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_grpc_proto_node_service_proto_rawDesc), len(file_internal_grpc_proto_node_service_proto_rawDesc)))
	})
	return file_internal_grpc_proto_node_service_proto_rawDescData
}

var file_internal_grpc_proto_node_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_grpc_proto_node_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_internal_grpc_proto_node_service_proto_goTypes = []any{
	(HealthStatus)(0),             // 0: prism.node.v1.HealthStatus
	(*GetResourcesRequest)(nil),   // 1: prism.node.v1.GetResourcesRequest
	(*GetResourcesResponse)(nil),  // 2: prism.node.v1.GetResourcesResponse
	(*GetHealthRequest)(nil),      // 3: prism.node.v1.GetHealthRequest
	(*GetHealthResponse)(nil),     // 4: prism.node.v1.GetHealthResponse
	(*HealthCheck)(nil),           // 5: prism.node.v1.HealthCheck
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_internal_grpc_proto_node_service_proto_depIdxs = []int32{
	6, // 0: prism.node.v1.GetResourcesResponse.timestamp:type_name -> google.protobuf.Timestamp
	6, // 1: prism.node.v1.GetHealthResponse.timestamp:type_name -> google.protobuf.Timestamp
	0, // 2: prism.node.v1.GetHealthResponse.status:type_name -> prism.node.v1.HealthStatus
	5, // 3: prism.node.v1.GetHealthResponse.checks:type_name -> prism.node.v1.HealthCheck
	0, // 4: prism.node.v1.HealthCheck.status:type_name -> prism.node.v1.HealthStatus
	6, // 5: prism.node.v1.HealthCheck.timestamp:type_name -> google.protobuf.Timestamp
	1, // 6: prism.node.v1.NodeService.GetResources:input_type -> prism.node.v1.GetResourcesRequest
	3, // 7: prism.node.v1.NodeService.GetHealth:input_type -> prism.node.v1.GetHealthRequest
	2, // 8: prism.node.v1.NodeService.GetResources:output_type -> prism.node.v1.GetResourcesResponse
	4, // 9: prism.node.v1.NodeService.GetHealth:output_type -> prism.node.v1.GetHealthResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_internal_grpc_proto_node_service_proto_init() }
func file_internal_grpc_proto_node_service_proto_init() {
	if File_internal_grpc_proto_node_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_grpc_proto_node_service_proto_rawDesc), len(file_internal_grpc_proto_node_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_grpc_proto_node_service_proto_goTypes,
		DependencyIndexes: file_internal_grpc_proto_node_service_proto_depIdxs,
		EnumInfos:         file_internal_grpc_proto_node_service_proto_enumTypes,
		MessageInfos:      file_internal_grpc_proto_node_service_proto_msgTypes,
	}.Build()
	File_internal_grpc_proto_node_service_proto = out.File
	file_internal_grpc_proto_node_service_proto_goTypes = nil
	file_internal_grpc_proto_node_service_proto_depIdxs = nil
}
