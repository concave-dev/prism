// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: internal/grpc/proto/scheduler_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PlaceSandboxRequest represents a sandbox placement request sent from the
// cluster leader to a selected worker node. Contains all information needed
// for sandbox provisioning and VM startup within the target node.
//
// Includes leader verification information to ensure placement requests
// originate from the current cluster leader for security and consistency.
type PlaceSandboxRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Core sandbox information
	SandboxId   string `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`       // Unique sandbox identifier
	SandboxName string `protobuf:"bytes,2,opt,name=sandbox_name,json=sandboxName,proto3" json:"sandbox_name,omitempty"` // Human-readable sandbox name
	// Sandbox configuration and metadata
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional sandbox metadata
	// Security and verification
	LeaderNodeId string `protobuf:"bytes,4,opt,name=leader_node_id,json=leaderNodeId,proto3" json:"leader_node_id,omitempty"` // Current leader node ID for verification
	// Placement context (optional, for debugging and monitoring)
	PlacementScore float64                `protobuf:"fixed64,5,opt,name=placement_score,json=placementScore,proto3" json:"placement_score,omitempty"` // Resource score that led to this placement
	ScheduledAt    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`            // When scheduling decision was made
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PlaceSandboxRequest) Reset() {
	*x = PlaceSandboxRequest{}
	mi := &file_internal_grpc_proto_scheduler_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceSandboxRequest) ProtoMessage() {}

func (x *PlaceSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_scheduler_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceSandboxRequest.ProtoReflect.Descriptor instead.
func (*PlaceSandboxRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_scheduler_service_proto_rawDescGZIP(), []int{0}
}

func (x *PlaceSandboxRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (x *PlaceSandboxRequest) GetSandboxName() string {
	if x != nil {
		return x.SandboxName
	}
	return ""
}

func (x *PlaceSandboxRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PlaceSandboxRequest) GetLeaderNodeId() string {
	if x != nil {
		return x.LeaderNodeId
	}
	return ""
}

func (x *PlaceSandboxRequest) GetPlacementScore() float64 {
	if x != nil {
		return x.PlacementScore
	}
	return 0
}

func (x *PlaceSandboxRequest) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

// PlaceSandboxResponse represents the result of a sandbox placement operation
// performed by a worker node. Contains success/failure status and optional
// details for placement tracking and debugging operations.
//
// Used by the scheduler to update sandbox status in the distributed state
// based on actual placement results from worker nodes.
type PlaceSandboxResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Placement result
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether placement succeeded
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Success details or error message
	// Node information
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` // Responding node identifier
	// Timing information for monitoring
	ProcessedAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`                               // When placement was processed
	ProcessingDurationMs int64                  `protobuf:"varint,5,opt,name=processing_duration_ms,json=processingDurationMs,proto3" json:"processing_duration_ms,omitempty"` // Time taken to process placement (300-500ms for v0)
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PlaceSandboxResponse) Reset() {
	*x = PlaceSandboxResponse{}
	mi := &file_internal_grpc_proto_scheduler_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceSandboxResponse) ProtoMessage() {}

func (x *PlaceSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_scheduler_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceSandboxResponse.ProtoReflect.Descriptor instead.
func (*PlaceSandboxResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_scheduler_service_proto_rawDescGZIP(), []int{1}
}

func (x *PlaceSandboxResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlaceSandboxResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PlaceSandboxResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PlaceSandboxResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

func (x *PlaceSandboxResponse) GetProcessingDurationMs() int64 {
	if x != nil {
		return x.ProcessingDurationMs
	}
	return 0
}

var File_internal_grpc_proto_scheduler_service_proto protoreflect.FileDescriptor

const file_internal_grpc_proto_scheduler_service_proto_rawDesc = "" +
	"\n" +
	"+internal/grpc/proto/scheduler_service.proto\x12\x12prism.scheduler.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf5\x02\n" +
	"\x13PlaceSandboxRequest\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\x12!\n" +
	"\fsandbox_name\x18\x02 \x01(\tR\vsandboxName\x12Q\n" +
	"\bmetadata\x18\x03 \x03(\v25.prism.scheduler.v1.PlaceSandboxRequest.MetadataEntryR\bmetadata\x12$\n" +
	"\x0eleader_node_id\x18\x04 \x01(\tR\fleaderNodeId\x12'\n" +
	"\x0fplacement_score\x18\x05 \x01(\x01R\x0eplacementScore\x12=\n" +
	"\fscheduled_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd8\x01\n" +
	"\x14PlaceSandboxResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\tR\x06nodeId\x12=\n" +
	"\fprocessed_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\x124\n" +
	"\x16processing_duration_ms\x18\x05 \x01(\x03R\x14processingDurationMs2u\n" +
	"\x10SchedulerService\x12a\n" +
	"\fPlaceSandbox\x12'.prism.scheduler.v1.PlaceSandboxRequest\x1a(.prism.scheduler.v1.PlaceSandboxResponseB2Z0github.com/concave-dev/prism/internal/grpc/protob\x06proto3"

var (
	file_internal_grpc_proto_scheduler_service_proto_rawDescOnce sync.Once
	file_internal_grpc_proto_scheduler_service_proto_rawDescData []byte
)

func file_internal_grpc_proto_scheduler_service_proto_rawDescGZIP() []byte {
	file_internal_grpc_proto_scheduler_service_proto_rawDescOnce.Do(func() {
		file_internal_grpc_proto_scheduler_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_grpc_proto_scheduler_service_proto_rawDesc), len(file_internal_grpc_proto_scheduler_service_proto_rawDesc)))
	})
	return file_internal_grpc_proto_scheduler_service_proto_rawDescData
}

var file_internal_grpc_proto_scheduler_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_internal_grpc_proto_scheduler_service_proto_goTypes = []any{
	(*PlaceSandboxRequest)(nil),   // 0: prism.scheduler.v1.PlaceSandboxRequest
	(*PlaceSandboxResponse)(nil),  // 1: prism.scheduler.v1.PlaceSandboxResponse
	nil,                           // 2: prism.scheduler.v1.PlaceSandboxRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_internal_grpc_proto_scheduler_service_proto_depIdxs = []int32{
	2, // 0: prism.scheduler.v1.PlaceSandboxRequest.metadata:type_name -> prism.scheduler.v1.PlaceSandboxRequest.MetadataEntry
	3, // 1: prism.scheduler.v1.PlaceSandboxRequest.scheduled_at:type_name -> google.protobuf.Timestamp
	3, // 2: prism.scheduler.v1.PlaceSandboxResponse.processed_at:type_name -> google.protobuf.Timestamp
	0, // 3: prism.scheduler.v1.SchedulerService.PlaceSandbox:input_type -> prism.scheduler.v1.PlaceSandboxRequest
	1, // 4: prism.scheduler.v1.SchedulerService.PlaceSandbox:output_type -> prism.scheduler.v1.PlaceSandboxResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_internal_grpc_proto_scheduler_service_proto_init() }
func file_internal_grpc_proto_scheduler_service_proto_init() {
	if File_internal_grpc_proto_scheduler_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_grpc_proto_scheduler_service_proto_rawDesc), len(file_internal_grpc_proto_scheduler_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_grpc_proto_scheduler_service_proto_goTypes,
		DependencyIndexes: file_internal_grpc_proto_scheduler_service_proto_depIdxs,
		MessageInfos:      file_internal_grpc_proto_scheduler_service_proto_msgTypes,
	}.Build()
	File_internal_grpc_proto_scheduler_service_proto = out.File
	file_internal_grpc_proto_scheduler_service_proto_goTypes = nil
	file_internal_grpc_proto_scheduler_service_proto_depIdxs = nil
}
